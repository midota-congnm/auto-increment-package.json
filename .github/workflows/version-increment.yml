name: Update release version in package.json
on:
  workflow_dispatch: 
  pull_request:
    branches:
      - main
    types:
      - labeled
jobs:
  version_diff_app:
    if: |
      contains(github.event.pull_request.labels.*.name, 'release:patch') ||
      contains(github.event.pull_request.labels.*.name, 'release:minor') ||
      contains(github.event.pull_request.labels.*.name, 'release:major')
    runs-on: ubuntu-latest
    outputs:
      chagned: ${{ steps.get_diff.outputs.changed }}
    steps:
      - uses: actions/checkout@v3

      - name: Get branch to marge
        run: git fetch origin ${{ github.base_ref }} --depth=1

      - name: Keep version changes
        id: get_diff
        working-directory: ./
        run: echo "changed=$(git diff origin/${{ github.base_ref }} HEAD --relative package.json | grep "^+.\+version" | wc -l)" >> $GITHUB_OUTPUT
  update_version:
    runs-on: ubuntu-latest
    needs: [version_diff_app]
    if: |
      needs.version_diff_app.outputs.chagned == '0'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        with:
          version: 7.1.0

      - name: Set git information
        if: steps.diff.outputs.changed == '0'
        run: |
          git config --global user.name 'congminhnguyen'
          git config --global user.email 'congminhnguyen11@gmail.com'
          git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update version(patch)
        if: contains(github.event.pull_request.labels.*.name, 'release:patch')
        working-directory: ./
        run: pnpm version patch --no-git-tag-version

      - name: Update version(minor)
        if: contains(github.event.pull_request.labels.*.name, 'release:minor')
        working-directory: ./
        run: pnpm version minor --no-git-tag-version

      - name: Update version(major)
        if: contains(github.event.pull_request.labels.*.name, 'release:major')
        working-directory: ./
        run: pnpm version major --no-git-tag-version

      - name: Commit and push to PR
        working-directory: ./
        run: |
          git add .
          git commit -m "App1 v$(grep version './package.json' | awk -F \" '{print $4}')"
          git push origin HEAD
